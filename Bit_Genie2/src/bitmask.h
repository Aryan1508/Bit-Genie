#pragma once
#include "Square.h"

namespace BitMask
{
  constexpr uint64_t file_a = 0x0101010101010101;
  constexpr uint64_t file_b = file_a << 1;
  constexpr uint64_t file_c = file_b << 1;
  constexpr uint64_t file_d = file_c << 1;
  constexpr uint64_t file_e = file_d << 1;
  constexpr uint64_t file_f = file_e << 1;
  constexpr uint64_t file_g = file_f << 1;
  constexpr uint64_t file_h = file_g << 1;
  constexpr uint64_t not_file_h = ~file_h;
  constexpr uint64_t not_file_a = ~file_a;
  constexpr uint64_t not_file_gh = ~(file_g | file_h);
  constexpr uint64_t not_file_ab = ~(file_a | file_b);
  constexpr uint64_t not_file_af = ~(file_a | file_f);
  constexpr uint64_t not_file_ah = ~(file_a | file_h);

  constexpr uint64_t rank1 = 0xff;
  constexpr uint64_t rank2 = rank1 << 8;
  constexpr uint64_t rank3 = rank2 << 8;
  constexpr uint64_t rank4 = rank3 << 8;
  constexpr uint64_t rank5 = rank4 << 8;
  constexpr uint64_t rank6 = rank5 << 8;
  constexpr uint64_t rank7 = rank6 << 8;
  constexpr uint64_t rank8 = rank7 << 8;

  constexpr uint64_t knight_attacks[total_squares]{
    0X0000000000020400,  0X0000000000050800,  0X00000000000a1100,  0X0000000000142200,
    0X0000000000284400,  0X0000000000508800,  0X0000000000a01000,  0X0000000000402000,
    0X0000000002040004,  0X0000000005080008,  0X000000000a110011,  0X0000000014220022,
    0X0000000028440044,  0X0000000050880088,  0X00000000a0100010,  0X0000000040200020,
    0X0000000204000402,  0X0000000508000805,  0X0000000a1100110a,  0X0000001422002214,
    0X0000002844004428,  0X0000005088008850,  0X000000a0100010a0,  0X0000004020002040,
    0X0000020400040200,  0X0000050800080500,  0X00000a1100110a00,  0X0000142200221400,
    0X0000284400442800,  0X0000508800885000,  0X0000a0100010a000,  0X0000402000204000,
    0X0002040004020000,  0X0005080008050000,  0X000a1100110a0000,  0X0014220022140000,
    0X0028440044280000,  0X0050880088500000,  0X00a0100010a00000,  0X0040200020400000,
    0X0204000402000000,  0X0508000805000000,  0X0a1100110a000000,  0X1422002214000000,
    0X2844004428000000,  0X5088008850000000,  0Xa0100010a0000000,  0X4020002040000000,
    0X0400040200000000,  0X0800080500000000,  0X1100110a00000000,  0X2200221400000000,
    0X4400442800000000,  0X8800885000000000,  0X100010a000000000,  0X2000204000000000,
    0X0004020000000000,  0X0008050000000000,  0X00110a0000000000,  0X0022140000000000,
    0X0044280000000000,  0X0088500000000000,  0X0010a00000000000,  0X0020400000000000,
  };
}